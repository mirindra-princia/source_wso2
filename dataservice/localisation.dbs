<data transports="http https" serviceGroup="mg.gov.edbm.societe.localisationDS" name="localisation">
  <description>Service adresse</description>
  <!-- CONFIGURATION PROD -->
  <!-- <config id="localisationDS">
    <property name="driverClassName">org.postgresql.Driver</property>
    <property name="url">jdbc:postgresql://devedbmdb.cq07jvdma2am.af-south-1.rds.amazonaws.com:5432/localisation</property>
    <property name="username">devedbmdb</property>
    <property name="password">devedbmdb</property>
  </config> -->
  <!-- CONFIGURATION TEST -->
  <config id="localisationDS">
    <property name="driverClassName">org.postgresql.Driver</property>
    <property name="url">jdbc:postgresql://13.246.0.44:5432/localisation</property>
    <property name="username">devedbmdb</property>
    <property name="password">devedbmdb</property>
  </config>
  <!-- CONFIGURATION DEV -->
  <!-- <config id="localisationDS">
    <property name="driverClassName">org.postgresql.Driver</property>
    <property name="url">jdbc:postgresql://localhost:5432/localisation</property>
    <property name="username">postgres</property>
    <property name="password">postgres</property>
  </config> -->
  <resource method="GET" path="province">
    <description>List of all province</description>
    <call-query href="selectAllProvinces" />
  </resource>
  <resource method="GET" path="region">
    <description>List of all region</description>
    <call-query href="selectAllRegion" />
  </resource>
  <resource method="GET" path="regionByProvince">
    <description />
    <call-query href="selectAllRegionByProvince">
      <with-param name="province_id" query-param="province_id" />
    </call-query>
  </resource>
  <resource method="GET" path="districtByRegion">
    <description>List of district by region</description>
    <call-query href="selectAllDistrictByRegion">
      <with-param name="region_id" query-param="region_id" />
    </call-query>
  </resource>
  <resource method="GET" path="commonByDistrict">
    <description>List of common by district id</description>
    <call-query href="selectAllCommon">
      <with-param name="district_id" query-param="district_id" />
    </call-query>
  </resource>
  <resource method="GET" path="boroughByCommon">
    <description />
    <call-query href="selectAllBoroughByCommon">
      <with-param name="common_id" query-param="common_id" />
    </call-query>
  </resource>
  <resource method="GET" path="fokontanyByBorough">
    <description>List of all fokontany by borough id</description>
    <call-query href="selectAllFokontanyByBorough">
      <with-param name="borough_id" query-param="borough_id" />
    </call-query>
  </resource>
  <resource method="GET" path="getProvinceById">
    <description />
    <call-query href="selectProvinceById">
      <with-param name="id" query-param="id" />
    </call-query>
  </resource>
  <resource method="GET" path="getRegionById">
    <description />
    <call-query href="selectRegionById">
      <with-param name="id" query-param="id" />
    </call-query>
  </resource>
  <resource method="GET" path="getDisctrictById">
    <description />
    <call-query href="selectDistrictById">
      <with-param name="id" query-param="id" />
    </call-query>
  </resource>
  <resource method="GET" path="getArrondissementCommuneDistrict/{idProvince}">
    <description />
    <call-query href="selectArrondissementCommuneDistrict">
      <with-param name="idProvince" query-param="idProvince" />
    </call-query>
  </resource>
  <resource method="GET" path="getCommuneFokontanyProvince/{idProvince}">
    <description />
    <call-query href="selectCommuneFokontanyProvince">
      <with-param name="idProvince" query-param="idProvince" />
    </call-query>
  </resource>
  <resource method="GET" path="getAdressName">
    <description />
    <call-query href="selectAdressName">
      <with-param name="fokontany_id" query-param="fokontany_id" />
      <with-param name="borough_id " query-param="borough_id " />
      <with-param name="province_id" query-param="province_id" />
      <with-param name="region_id" query-param="region_id" />
      <with-param name="district_id" query-param="district_id" />
      <with-param name="common_id" query-param="common_id" />
    </call-query>
  </resource>
  <resource method="POST" path="addCommonOther">
    <description />
    <call-query href="addCommonOther">
      <with-param name="codePays" query-param="codePays" />
      <with-param name="name" query-param="name" />
    </call-query>
  </resource>
  <resource method="POST" path="addCity">
    <description />
    <call-query href="addCity">
      <with-param name="name" query-param="name" />
      <with-param name="idCommonOther" query-param="idCommonOther" />
    </call-query>
  </resource>
  <resource method="GET" path="getIdCommonOtherByName">
    <description />
    <call-query href="getIdCommonOtherByName">
      <with-param name="name" query-param="name" />
    </call-query>
  </resource>
  <resource method="GET" path="getIdCityOtherByCityName">
    <description />
    <call-query href="getIdCityOtherByCityName">
      <with-param name="name" query-param="name" />
    </call-query>
  </resource>
  <resource method="GET" path="getAllCommonOther">
    <description />
    <call-query href="getAllCommonOther" />
  </resource>
  <resource method="GET" path="getAllCityOther">
    <description />
    <call-query href="getAllCityOther" />
  </resource>
  <resource method="GET" path="getAddressDetail">
    <description />
    <call-query href="getAddressDetail">
      <with-param name="idFokontany" query-param="idFokontany" />
      <with-param name="idArrondissement " query-param="idArrondissement " />
      <with-param name="idProvince" query-param="idProvince" />
      <with-param name="idRegion" query-param="idRegion" />
      <with-param name="idDistrict" query-param="idDistrict" />
      <with-param name="idCommune" query-param="idCommune" />
    </call-query>
  </resource>
  <resource method="GET" path="countryByCode">
    <description />
    <call-query href="countryByCode">
      <with-param name="codePays" query-param="codePays" />
    </call-query>
  </resource>
  <resource method="GET" path="getAllCountry">
    <description />
    <call-query href="getAllCountry" />
  </resource>
  <resource method="GET" path="getCommonOtherLabelById">
    <description />
    <call-query href="getCommonOtherLabelById">
      <with-param name="idCommonOther" query-param="idCommonOther" />
    </call-query>
  </resource>
  <resource method="GET" path="getCityOtherLabelById">
    <description />
    <call-query href="getCityOtherLabelById">
      <with-param name="idCity" query-param="idCity" />
    </call-query>
  </resource>
  <query id="selectAllProvinces" useConfig="localisationDS">
    <sql>SELECT id, name
	FROM public.province;</sql>
    <result outputType="json">{"provinces":{"province":[{"id":"$id","name":"$name"}]}}</result>
  </query>
  <query id="selectAllRegion" useConfig="localisationDS">
    <sql>SELECT id, name, province_id
	FROM public.region;</sql>
    <result outputType="json">{"regions":{"region":[{"id":"$id","name":"$name","province_id":"$province_id"}]}}</result>
  </query>
  <query id="selectAllRegionByProvince" useConfig="localisationDS">
    <sql>SELECT id, name, province_id
	FROM public.region WHERE province_id= :province_id</sql>
    <param type="IN" name="province_id" paramType="SCALAR" sqlType="INTEGER" />
  </query>
  <query id="selectAllDistrictByRegion" useConfig="localisationDS">
    <sql>SELECT id, name, region_id
	FROM public.district WHERE region_id= :region_id</sql>
    <param type="IN" name="region_id" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"districts":{"district":[{"id":"$id","name":"$name","region_id":"$region_id"}]}}</result>
  </query>
  <query id="selectAllCommon" useConfig="localisationDS">
    <sql>SELECT name, district_id, id
	FROM public.common WHERE district_id= :district_id</sql>
    <param type="IN" name="district_id" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"commons":{"common":[{"id":"$id","name":"$name","district_id":"$district_id"}]}}</result>
  </query>
  <query id="selectAllBoroughByCommon" useConfig="localisationDS">
    <sql>SELECT id, name, common_id
	FROM public.borough WHERE common_id= :common_id</sql>
    <param type="IN" name="common_id" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"boroughs":{"borough":[{"id":"$id","name":"$name","common_id":"$common_id"}]}}</result>
  </query>
  <query id="selectAllFokontanyByBorough" useConfig="localisationDS">
    <sql>SELECT id, name, borough_id
	FROM public.fokontany WHERE borough_id= :borough_id</sql>
    <param type="IN" name="borough_id" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"fokontanys":{"fokontany":[{"id":"$id","name":"$name","borough_id":"$borough_id"}]}}</result>
  </query>
  <query id="selectDistrictById" useConfig="localisationDS">
    <sql>SELECT id, name, region_id
	FROM public.district where id=:id</sql>
    <param type="IN" name="id" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"districts":{"district":[{"id":"$id","name":"$name","region_id":"$region_id"}]}}</result>
  </query>
  <query id="selectProvinceById" useConfig="localisationDS">
    <sql>SELECT id, name
	FROM public.province WHERE id= :id</sql>
    <param type="IN" name="id" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"provinces":{"province":[{"id":"$id","name":"$name"}]}}</result>
  </query>
  <query id="selectRegionById" useConfig="localisationDS">
    <sql>SELECT id, name, province_id
	FROM public.region WHERE id= :id</sql>
    <param type="IN" name="id" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"regions":{"region":[{"id":"$id","name":"$name","province_id":"$province_id"}]}}</result>
  </query>
  <query id="selectFokontanyArrondissemnt" useConfig="localisationDS">
    <sql>SELECT borough.id, borough.name as borough, borough.common_id,fokontany.id,fokontany.name as fokontany,fokontany.borough_id
	FROM public.borough, public.fokontany WHERE  borough.id=fokontany.borough_id;</sql>
  </query>
  <query id="selectArrondissementCommuneDistrict" useConfig="localisationDS">
    <sql>
    	SELECT borough.id as b_id, borough.name as b, borough.common_id,common.name as c,district.id as d_id,district.name as d,region.id as r_id,province.id as p_id
		FROM public.borough,public.common,public.district,public.region,public.province 
		WHERE   common.id=borough.common_id AND district.id=common.district_id AND region.id=district.region_id AND province.id=region.province_id AND province.id=ANY(:idProvince::int[])
	</sql>
    <param type="IN" name="idProvince" paramType="ARRAY" sqlType="STRING" />
    <result outputType="json">{"arrs":{"arr":[{"bId":"$b_id","b":"$b","cId":"$common_id","dId":"$d_id","d":"$d","rId":"$r_id","pId":"$p_id"}]}}

</result>
  </query>
  <query id="selectCommuneFokontanyProvince" useConfig="localisationDS">
    <sql>SELECT borough.id as b_id, borough.common_id,common.name as c_name,fokontany.id as fkt_id,fokontany.name as fkt,district.id as d_id,region.id as r_id,province.id as p_id
	FROM public.borough, public.fokontany,public.common,public.district,public.region,public.province 
	WHERE  borough.id=fokontany.borough_id AND common.id=borough.common_id AND district.id=common.district_id AND region.id=district.region_id AND province.id=region.province_id AND province.id=ANY(:idProvince::int[]associates)</sql>
    <param type="IN" name="idProvince" paramType="ARRAY" sqlType="STRING" />
    <result outputType="json">{"arrondissements":{"arrondissement":[{"bId":"$b_id","cId":"$common_id","c":"$c_name","fId":"$fkt_id","f":"$fkt","dId":"$d_id","rId":"$r_id","pId":"$p_id"}]}}

</result>
  </query>
  <query id="selectAdressName" useConfig="localisationDS">
    <sql>SELECT fokontany.name as f, borough.name as b, common.name as c,district.name as d,region.name as r,province.name as p
	FROM public.borough,public.common,public.district,public.region,public.province,public.fokontany
	WHERE   common.id= :common_id AND district.id= :district_id AND region.id= :region_id AND province.id= :province_id AND borough.id= :borough_id AND fokontany.id= :fokontany_id</sql>
    <param type="IN" name="fokontany_id" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="borough_id " paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="province_id" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="region_id" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="district_id" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="common_id" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"adresses":{"adress":[{"b":"$b","c":"$c","f":"$f","d":"$d","r":"$r","p":"$p"}]}}</result>
  </query>
  <query id="getAddressDetail" useConfig="localisationDS">
    <sql> SELECT 
	    fokontany.name as f_name, fokontany.id as f_id, 
	    borough.name as b_name, borough.id as b_id, 
	    common.name as c_name, common.id as c_id, 
	    district.name as d_name, district.id as d_id, 
	    region.name as r_name, region.id as r_id, 
	    province.name as p_name, province.id as p_id,
	    region_mapping.*,
	    province_mapping.*,
	    fokontany_mapping.*
		FROM public.province
		LEFT JOIN public.region ON region.province_id = province.id
		LEFT JOIN public.district ON district.region_id = region.id
		LEFT JOIN public.common ON common.district_id = district.id
		LEFT JOIN public.borough ON borough.common_id = common.id
		LEFT JOIN public.fokontany ON fokontany.borough_id = borough.id
		LEFT JOIN public.region_mapping ON region_mapping."idRegion" = region.id
		LEFT JOIN public."provinceMapping" province_mapping ON province_mapping."idProvinceOrinasa" = province.id
		LEFT JOIN public."fokontanyMapping" fokontany_mapping ON fokontany_mapping."idFokontanyOrinasa" = fokontany.id
		WHERE common.id= :idCommune AND district.id= :idDistrict AND region.id= :idRegion AND province.id= :idProvince AND borough.id= :idArrondissement AND fokontany.id= :idFokontany
	</sql>
    <param type="IN" name="idFokontany" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="idArrondissement " paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="idProvince" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="idRegion" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="idDistrict" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="idCommune" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">
    	{
    		"data": {
    			"adresses":[{
				    "province":{
				    	"id": $p_id,
				    	"name": "$p_name",
				    	"provinceMapping": {
				    		"idProvinceDgi": $idProvinceDgi
				    	}
				    },
				    "region":{
				    	"id": $r_id,
				    	"name": "$r_name",
				    	"province_id": $p_id
				    },
				    "regionMapping": {
				    	"idRegionRncs": "$idRegionRncs",
				    	"idRegionDgi": "$idRegionDgi"
				    },
				    "district":{
				    	"id": $d_id,
				    	"name": "$d_name",
				    	"region_id": $r_id
				    },
				    "commune":{
				    	"id": $c_id,
				    	"name": "$c_name",
				    	"district_id": $d_id
				    },
				    "arrondissement":{
				    	"id": $b_id,
				    	"name": "$b_name",
				    	"common_id": $c_id
				    },
				    "fokontany":{
				    	"id": $f_id,
				    	"name": "$f_name",
				    	"borough_id": $b_id,
				    	"fokontanyMapping": {
				    		"idFokontanyDgi": $idFokontanyDgi
				    	}
				    }
				}]
			}
    	}
    </result>
  </query>
  <query id="addCommonOther" useConfig="localisationDS">
    <sql>INSERT INTO public.common_other(
	 "idPays", name)
	VALUES ( :codePays, :name) RETURNING "idCommonOther"</sql>
    <param type="IN" name="codePays" paramType="SCALAR" sqlType="STRING" optional="false" />
    <param type="IN" name="name" paramType="SCALAR" sqlType="STRING" optional="false" />
    <result outputType="json">{"idCommonOther":{"idCommonOther":"$idCommonOther"}}</result>
  </query>
  <query id="addCity" useConfig="localisationDS">
    <sql>INSERT INTO public.city_other(
	 name, "idCommonOther")
	VALUES ( :name, :idCommonOther) RETURNING "idCity"</sql>
    <param type="IN" name="name" paramType="SCALAR" sqlType="STRING" optional="false" />
    <param type="IN" name="idCommonOther" paramType="SCALAR" sqlType="INTEGER" optional="false" />
    <result outputType="json">{"idCity":{"idCity":"$idCity"}}</result>
  </query>
  <query id="getIdCommonOtherByName" useConfig="localisationDS">
    <sql>SELECT "idCommonOther", "idPays"
	FROM public.common_other WHERE name LIKE :name</sql>
    <param type="IN" name="name" paramType="SCALAR" sqlType="STRING" optional="false" />
    <result outputType="json">{"idCommonOther":{"idCommonOther":"$idCommonOther","idPays":"$idPays"}}</result>
  </query>
  <query id="getIdCityOtherByCityName" useConfig="localisationDS">
    <sql>SELECT "idCity", "idCommonOther"
	FROM public.city_other WHERE name LIKE :name</sql>
    <param type="IN" name="name" paramType="SCALAR" sqlType="STRING" optional="false" />
    <result outputType="json">{"idCities":{"idCity":"$idCity","idCommonOther":"$idCommonOther"}}</result>
  </query>
  <query id="getAllCommonOther" useConfig="localisationDS">
    <sql>SELECT "idCommonOther", "idPays", name
	FROM public.common_other;</sql>
    <result outputType="json">{"commonOthers":{"commonOthers":[{ "idCommonOther":"$idCommonOther", "idPays":"$idPays", "name":"$name"}]}}</result>
  </query>
  <query id="getAllCityOther" useConfig="localisationDS">
    <sql>SELECT "idCity", name, "idCommonOther"
	FROM public.city_other;</sql>
    <result outputType="json">{"cityOthers":{"cityOthers":[{"idCity":"$idCity", "name":"$name", "idCommonOther":"$idCommonOther" }]}}</result>
  </query>
  <resource method="GET" path="commonMapping">
    <description />
    <call-query href="commonMapping">
      <with-param name="commonId" query-param="commonId" />
    </call-query>
  </resource>
  <query id="commonMapping" useConfig="localisationDS">
    <sql>SELECT * FROM public.common_mapping WHERE "idCommon" = :commonId</sql>
    <param type="IN" name="commonId" paramType="SCALAR" sqlType="INTEGER" optional="false" />
    <result outputType="json">{"data": {"commonMappings":[{"id":$id, "idCommon":$idCommon, "idCommonRncs":"$idCommonRncs", "idCommonDgi":$idCommonDgi}]}}</result>
  </query>
  <resource method="GET" path="districtMapping">
    <description />
    <call-query href="districtMapping">
      <with-param name="districtId" query-param="districtId" />
    </call-query>
  </resource>
  <query id="districtMapping" useConfig="localisationDS">
    <sql>SELECT * FROM public.district_mapping WHERE "idDistrict" = :districtId</sql>
    <param type="IN" name="districtId" paramType="SCALAR" sqlType="INTEGER" optional="false" />
    <result outputType="json">{"data": {"districtMappings":[{"id":$id, "idDistrict":$idDistrict, "idDistrictRncs":"$idDistrictRncs", "idDistrictDgi":$idDistrictDgi}]}}</result>
  </query>
  <query id="countryByCode" useConfig="localisationDS">
    <sql>SELECT * FROM public.country WHERE country."codePays" = :codePays</sql>
    <param type="IN" name="codePays" paramType="SCALAR" sqlType="STRING" optional="false" />
    <result outputType="json">{"data": {"country":{"codePays":"$codePays", "nomPays":$nomPays, "idPaysRncs":"$idPaysRncs"}}}</result>
  </query>
  <query id="getAllCountry" useConfig="localisationDS">
    <sql>SELECT "nomPays", "codePays" FROM public.country ORDER BY "nomPays" ASC</sql>
    <result outputType="json">{"countries":{"country":[{"nomPays":"$nomPays","codePays":"$codePays"}]}}</result>
  </query>
  <query id="getCommonOtherLabelById" useConfig="localisationDS">
    <sql>SELECT  name, "idPays"
	FROM public.common_other WHERE "idCommonOther"=:idCommonOther</sql>
    <param type="IN" name="idCommonOther" paramType="SCALAR" sqlType="INTEGER" optional="false" />
    <result outputType="json">{"commonOther":{"name":"$name","idPays":"$idPays"}}</result>
  </query>
  <query id="getCityOtherLabelById" useConfig="localisationDS">
    <sql>SELECT "idCity", name, "idCommonOther"
	FROM public.city_other WHERE "idCity"=:idCity</sql>
    <param type="IN" name="idCity" paramType="SCALAR" sqlType="INTEGER" optional="false" />
    <result outputType="json">{"cityOther":{"name":"$name","idCommonOther":"$idCommonOther"}}</result>
  </query>
  <resource method="GET" path="getOtherAddressDetail/{idCity}">
    <description />
    <call-query href="getOtherAddressDetail">
      <with-param name="idCity" query-param="idCity" />
    </call-query>
  </resource>
  <query id="getOtherAddressDetail" useConfig="localisationDS">
    <sql> SELECT 
	    common."idCommonOther" as common_id, common.name as common_name,
	    city."idCity" as city_id, city.name as city_name
		FROM public.city_other city 
		LEFT JOIN public.common_other common ON common."idCommonOther" = city."idCommonOther"
		WHERE city."idCity"= :idCity
	</sql>
    <param type="IN" name="idCity" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"adresse":{
    "commune":{
    	"id": $common_id,
    	"name": "$common_name"
    },
    "ville":{
    	"id": $city_id,
    	"name": "$city_name"
    }}}</result>
  </query>
  
  <!-- REGION -->
  <resource method="GET" path="regions/{id}">
    <description />
    <call-query href="region">
      <with-param name="id" query-param="id" />
    </call-query>
  </resource>
  <query id="region" useConfig="localisationDS">
    <sql>SELECT * FROM region WHERE id = :id</sql>
    <param type="IN" name="id" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">
    {"region":{
    	"id": $id,
    	"name": "$name",
    	"province_id": $province_id
    }}
    </result>
    
  </query>
  
  <resource method="POST" path="regions/filters/by/ids">
    <description />
    <call-query href="regionFilterByIds">
      <with-param name="ids" query-param="ids" />
    </call-query>
  </resource>
  <query id="regionFilterByIds" useConfig="localisationDS">
    <sql>SELECT * FROM region WHERE id IN (:ids)</sql>
    <param type="IN" name="ids" paramType="ARRAY" sqlType="INTEGER" />
    <result outputType="json">
    {"data":
    	{"regions":[{
	    	"id": $id,
	    	"name": "$name",
	    	"province_id": $province_id
	    }]}
    }
    </result>
  </query>
  
  <resource method="GET" path="regions">
    <description />
    <call-query href="fetchRegion"/>
  </resource>
  <query id="fetchRegion" useConfig="localisationDS">
    <sql>
    	SELECT * FROM region
    </sql>
    <result outputType="json">
    {"data":
    	{"regions":[{
	    	"id": $id,
	    	"name": "$name",
	    	"province_id": $province_id
	    }]}
    }
    </result>
  </query>
  
  <resource method="POST" path="regions/filters/by/districts">
    <description />
    <call-query href="regionFilterByDistricts">
      <with-param name="ids" query-param="ids" />
    </call-query>
  </resource>
  <query id="regionFilterByDistricts" useConfig="localisationDS">
    <sql>
    	SELECT DISTINCT(region.*) FROM region 
    	JOIN district ON district.region_id = region.id
    	WHERE district.id IN (:ids)
    	ORDER BY region.name ASC
    </sql>
    <param type="IN" name="ids" paramType="ARRAY" sqlType="INTEGER" />
    <result outputType="json">
    {"data":
    	{"regions":[{
	    	"id": $id,
	    	"name": "$name",
	    	"province_id": $province_id
	    }]}
    }
    </result>
  </query>
  <!-- #REGION -->
  
  <!-- PROVINCE -->
  <resource method="GET" path="provinces/{id}">
    <description />
    <call-query href="province">
      <with-param name="id" query-param="id" />
    </call-query>
  </resource>
  <query id="province" useConfig="localisationDS">
    <sql>SELECT * FROM province WHERE id = :id</sql>
    <param type="IN" name="id" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">
    {"region":{
    	"id": $id,
    	"name": "$name"
    }}
    </result>
    
  </query>
  
  <resource method="POST" path="provinces/filters/by/ids">
    <description />
    <call-query href="provinceFilterByIds">
      <with-param name="ids" query-param="ids" />
    </call-query>
  </resource>
  <query id="provinceFilterByIds" useConfig="localisationDS">
    <sql>SELECT * FROM province WHERE id IN (:ids)</sql>
    <param type="IN" name="ids" paramType="ARRAY" sqlType="INTEGER" />
    <result outputType="json">
    {"data":
    	{"regions":[{
	    	"id": $id,
	    	"name": "$name"
	    }]}
    }
    </result>
    
  </query>
  <!-- #PROVINCE -->
  
  <!-- BOROUGH -->
  <resource path="fetchFokontanysByBorough/{boroughId}" method="GET">
    <description>List of all fokontany by borough id</description>
    <call-query href="fetchFokontanysByBorough">
      <with-param name="borough_id" query-param="boroughId" />
    </call-query>
  </resource>
  <query id="fetchFokontanysByBorough" useConfig="localisationDS">
    <sql>SELECT id, name, borough_id
	FROM public.fokontany WHERE borough_id= :borough_id</sql>
    <param type="IN" name="borough_id" sqlType="INTEGER" paramType="SCALAR" />
    <result outputType="json">{"data":{"fokontany":[{"id":"$id","name":"$name","borough_id":"$borough_id"}]}}</result>
  </query>
  
  <resource path="boroughs/districts/{id}" method="GET">
    <description />
    <call-query href="fetchBoroughsByDistrict">
      <with-param name="id" query-param="id" />
    </call-query>
  </resource>
  <query id="fetchBoroughsByDistrict" useConfig="localisationDS">
    <sql>
    	SELECT DISTINCT(borough.*)
		FROM public.borough 
		JOIN common ON common.id = borough.common_id
		WHERE common.district_id = :id
		ORDER BY borough.name ASC
	</sql>
    <param type="IN" name="id" sqlType="INTEGER" paramType="SCALAR" />
    <result outputType="json">
    	{"data":
    		{"boroughs":[{
    			"id":"$id",
    			"name":"$name",
    			"common_id":"$common_id"
    		}]}
    	}
    </result>
  </query>
  <!-- #BOROUGH -->
  
  <!-- ADDRESS DETAIL -->
  <resource path="fetchAddressDetail" method="GET">
    <description />
    <call-query href="fetchAddressDetail">
      <with-param name="idFokontany" query-param="idFokontany" />
      <with-param name="idArrondissement " query-param="idArrondissement " />
      <with-param name="idProvince" query-param="idProvince" />
      <with-param name="idRegion" query-param="idRegion" />
      <with-param name="idDistrict" query-param="idDistrict" />
      <with-param name="idCommune" query-param="idCommune" />
    </call-query>
  </resource>
  <query id="fetchAddressDetail" useConfig="localisationDS">
    <sql> SELECT 
	    fokontany.name as f_name, fokontany.id as f_id, 
	    borough.name as b_name, borough.id as b_id, 
	    common.name as c_name, common.id as c_id, 
	    district.name as d_name, district.id as d_id, 
	    region.name as r_name, region.id as r_id, 
	    province.name as p_name, province.id as p_id,
	    province_mapping.*,
	    region_mapping.*,
	    district_mapping.*,
	    common_mapping.*,
	    fokontany_mapping.*
		FROM public.province
		LEFT JOIN public."provinceMapping" province_mapping ON province_mapping."idProvinceOrinasa" = province.id
		LEFT JOIN public.region ON region.province_id = province.id
		LEFT JOIN public.region_mapping ON region_mapping."idRegion" = region.id
		LEFT JOIN public.district ON district.region_id = region.id
		LEFT JOIN public."district_mapping" district_mapping ON district_mapping."idDistrict" = district.id
		LEFT JOIN public.common ON common.district_id = district.id
		LEFT JOIN public."common_mapping" common_mapping ON common_mapping."idCommon" = common.id
		LEFT JOIN public.borough ON borough.common_id = common.id
		LEFT JOIN public.fokontany ON fokontany.borough_id = borough.id
		LEFT JOIN public."fokontanyMapping" fokontany_mapping ON fokontany_mapping."idFokontanyOrinasa" = fokontany.id
		WHERE common.id= :idCommune AND district.id= :idDistrict AND region.id= :idRegion AND province.id= :idProvince AND borough.id= :idArrondissement AND fokontany.id= :idFokontany
	</sql>
    <param type="IN" name="idFokontany" sqlType="INTEGER" paramType="SCALAR" />
    <param type="IN" name="idArrondissement " sqlType="INTEGER" paramType="SCALAR" />
    <param type="IN" name="idProvince" sqlType="INTEGER" paramType="SCALAR" />
    <param type="IN" name="idRegion" sqlType="INTEGER" paramType="SCALAR" />
    <param type="IN" name="idDistrict" sqlType="INTEGER" paramType="SCALAR" />
    <param type="IN" name="idCommune" sqlType="INTEGER" paramType="SCALAR" />
    <result outputType="json">{
    	"data":{
		    "addresses": [{
		    	"province":{
			    	"id": $p_id,
			    	"name": "$p_name",
			    	"provinceMapping": {
			    		"idProvinceOrinasa": $idProvinceOrinasa,
			    		"idProvinceDgi": $idProvinceDgi
			    	}
			    },
			    "region":{
			    	"id": $r_id,
			    	"name": "$r_name",
			    	"province_id": $p_id,
			    	"regionMapping": {
			    		"idRegion": $idRegion,
				    	"idRegionRncs": "$idRegionRncs",
				    	"idRegionDgi": $idRegionDgi
				    }
			    },
			    "district":{
			    	"id": $d_id,
			    	"name": "$d_name",
			    	"region_id": $r_id,
			    	"districtMapping": {
			    		"idDistrict": $idDistrict,
			    		"idDistrictRncs": "$idDistrictRncs",
			    		"idDistrictDgi": $idDistrictDgi
			    	}
			    },
			    "commune":{
			    	"id": $c_id,
			    	"name": "$c_name",
			    	"district_id": $d_id,
			    	"commonMapping": {
			    		"IdCommon": $IdCommon,
			    		"idCommonRncs": "$idCommonRncs",
			    		"idCommonDgi": $idCommonDgi
			    	}
			    },
			    "arrondissement":{
			    	"id": $b_id,
			    	"name": "$b_name",
			    	"common_id": $c_id
			    },
			    "fokontany":{
			    	"id": $f_id,
			    	"name": "$f_name",
			    	"borough_id": $b_id,
			    	"fokontanyMapping": {
			    		"idFokontanyOrinasa": $idFokontanyOrinasa,
			    		"idFokontanyDgi": "$idFokontanyDgi"
			    	}
			    }
		    }]
		}
	}</result>
  </query>
  
  <resource path="addresses/foreigns/cities/{id}" method="GET">
    <description />
    <call-query href="foreignAddressDetail">
      <with-param name="id" query-param="id"/>
    </call-query>
  </resource>
  <query id="foreignAddressDetail" useConfig="localisationDS">
    <sql>
    	SELECT 
    	common."idCommonOther" as common_id,
    	common.name as common_name,
    	city."idCity" as city_id,
    	city.name as city_name,
    	country."codePays" as country_id,
    	country."nomPays" as country_name
    	FROM common_other common
    	LEFT JOIN city_other city ON city."idCommonOther" = common."idCommonOther"
    	LEFT JOIN country ON country."codePays" = common."idPays"
    	WHERE city."idCity" = :id 
    	LIMIT 1
	</sql>
    <param type="IN" name="id" sqlType="INTEGER" paramType="SCALAR" />
    <result outputType="json">{
    	"address":{
		    "commune":{
		    	"id": $common_id,
		    	"name": "$common_name",
		    },
		    "city":{
		    	"id": $city_id,
		    	"name": "$city_name"
		    },
		    "country":{
		    	"id": "$country_id",
		    	"name": "$country_name"
		    }
		}
	}</result>
  </query>
  <!-- #ADDRESS DETAIL -->
  
  <!-- COMMONS -->
  <resource path="commons/filters/by/ids" method="POST">
    <description/>
    <call-query href="fetchCommonsByIds">
      <with-param name="ids" query-param="ids" />
    </call-query>
  </resource>
  <query id="fetchCommonsByIds" useConfig="localisationDS">
    <sql>
    	SELECT * FROM common WHERE id IN (:ids)
    </sql>
    <param type="IN" name="ids" sqlType="INTEGER" paramType="ARRAY" />
    <result outputType="json">
    	{
    		"data": {
    			"commons": [{
    				"id": $id,
    				"name": "$name"
    			}]
    		}
    	}
    </result>
  </query>
  <!-- #COMMONS -->
  
  <!-- DISTRICT -->
  <resource path="districts/filters/by/ids" method="POST">
    <description/>
    <call-query href="fetchDistrictsByIds">
      <with-param name="ids" query-param="ids" />
    </call-query>
  </resource>
  <query id="fetchDistrictsByIds" useConfig="localisationDS">
    <sql>
    	SELECT * FROM district WHERE id IN (:ids)
    </sql>
    <param type="IN" name="ids" sqlType="INTEGER" paramType="ARRAY" />
    <result outputType="json">
    	{
    		"data": {
    			"districts": [{
    				"id": $id,
    				"name": "$name"
    			}]
    		}
    	}
    </result>
  </query>
  
  <resource path="districts/regions/{id}" method="GET">
    <description/>
    <call-query href="fetchDistrictsByRegion">
      <with-param name="id" query-param="id" />
    </call-query>
  </resource>
  <query id="fetchDistrictsByRegion" useConfig="localisationDS">
    <sql>
    	SELECT DISTINCT(district.*) FROM district 
    	JOIN region ON region.id = district.region_id
    	WHERE region.id = :id
    	ORDER BY district.name ASC
    </sql>
    <param type="IN" name="id" sqlType="INTEGER" paramType="SCALAR" />
    <result outputType="json">
    	{
    		"data": {
    			"districts": [{
    				"id": $id,
    				"name": "$name"
    			}]
    		}
    	}
    </result>
  </query>
  <!-- #DISTRICT -->
</data>
